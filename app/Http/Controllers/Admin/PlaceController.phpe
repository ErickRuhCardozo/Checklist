<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Admin\Controller;
use App\Http\Requests\PlaceRequest;
use App\Models\Place;
use App\Models\PlaceAllowedUsers;
use App\Models\Unity;
use App\Models\UserType;
use Illuminate\Database\UniqueConstraintViolationException;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\View;
use Illuminate\Support\Facades\Session;

class PlaceController extends Controller
{
    public function index()
    {
        return View::make('admin.places.index', [
            'places' => Place::sortable()->simplePaginate(10)
        ]);
    }

    public function create()
    {
        $userTypeOptions = UserType::options();
        $userTypeOptions = array_filter($userTypeOptions, fn($opt) => !in_array($opt['value'], [UserType::ADMIN->value, UserType::COORDINATOR->value]));

        if (Request::has('back'))
            Session::flash('back', Request::get('back'));

        return View::make('admin.places.create', [
            'unityOptions' => Unity::options(),
            'userTypeOptions' => $userTypeOptions,
        ]);
    }

    public function store(PlaceRequest $request)
    {
        $data = $request->validated();

        try {
            DB::transaction(function() use (&$data) {
                $place = Place::create($data);

                foreach ($data['allowedUserTypes'] as $userType) {
                    PlaceAllowedUsers::create([
                        'place_id' => $place->id,
                        'user_type' => $userType,
                    ]);
                }
            });
        } catch (UniqueConstraintViolationException $err) {
            return Redirect::back()->withErrors(['name' => 'Já existe um Ambiente com esse nome nesta Unidade'])->withInput();
        }

        if (Session::has('back'))
            return Redirect::to(Session::get('back'));

        return Redirect::route('admin.places.index');
    }

    public function show(Place $place)
    {
        if (Request::has('back'))
            Session::flash('back', Request::get('back'));

        $allowedUserTypes = PlaceAllowedUsers::where('place_id', $place->id)->get(['user_type'])->map(fn($m) => $m->user_type);

        return View::make('admin.places.show', [
            'place' => $place,
            'allowedUserTypes' => $allowedUserTypes,
        ]);
    }

    public function edit(Place $place)
    {
        $allowedUserTypes = PlaceAllowedUsers::where('place_id', $place->id)->get(['user_type'])->map(fn($m) => $m->user_type->value);
        $userTypeOptions = UserType::options();
        $userTypeOptions = array_filter($userTypeOptions, fn($opt) => !in_array($opt['value'], [UserType::ADMIN->value, UserType::COORDINATOR->value]));

        return View::make('admin.places.edit', [
            'place' => $place,
            'unityOptions' => Unity::options(),
            'userTypeOptions' => $userTypeOptions,
            'allowedUserTypes' => $allowedUserTypes->toArray(),
        ]);
    }

    public function update(PlaceRequest $request, Place $place)
    {
        $data = $request->validated();

        try {
            DB::transaction(function() use (&$place, &$data) {
                $place->update($data);
                PlaceAllowedUsers::where('place_id', $place->id)->delete();

                foreach ($data['allowedUserTypes'] as $userType) {
                    PlaceAllowedUsers::create([
                        'place_id' => $place->id,
                        'user_type' => $userType,
                    ]);
                }
            });

        } catch (UniqueConstraintViolationException $err) {
            return Redirect::back()->withErrors(['name' => 'Já existe um Ambiente com esse nome nessa Unidade'])->withInput();
        }

        return Redirect::route('admin.places.show', $place->id);
    }

    public function destroy(Place $place)
    {
        $place->delete();

        if (Session::has('back'))
            return Redirect::to(Session::get('back'));

        return Redirect::route('admin.places.index');
    }
}
